#!/user/local/bin/perl-w

###########################################################################
## Date: 02-05-2014                                                      ##
## Author: Shruti Bhide                                                  ##
## Program Description: 						 ##
## This script is written to facilitate the conversion of tsv files      ##
## generated by the illumina genome variant analyzer.                    ##
## Run as: perl 01_a_convert_tsv_to_vcf.pl in a folder that has all the  ##
## tsv files that need to br converted.                                  ##
###########################################################################
##***************************ASSUMPTION
## HGC and HGP are alyaws ASSUMED TO BE PRESENT since we are looking for Exonic changes


use strict;
use warnings;
use Data::Dumper;

my @all_tsv_files=`dir /B *.tsv`;
print Dumper @all_tsv_files;

foreach my $inp_tsv(@all_tsv_files){

#Input file
chomp $inp_tsv;
open(TS,$inp_tsv) || die "ERROR: Cannot open $inp_tsv file\n";

my $sample_name=$inp_tsv;
$sample_name=~s/\.tsv//;

# VCF Output file
my $out_file=$sample_name."\_tsv\.vcf";
open(OUT,">$out_file") || die "ERROR\: No permission to open file $out_file for write.\n";


my %tsv_header_hash=();
my $header_flag=0;
while( my $tsv_line = <TS> ){
	chomp $tsv_line;
	
	## Check if file has header information and print OUT appropriate headers in vcf file
	if($tsv_line=~m/^Gene\_0.*/){
		$header_flag=1;	
		my @temp_data=split("\t",$tsv_line);
		for(my $i=0; $i<scalar(@temp_data);$i++){
			$tsv_header_hash{$temp_data[$i]}=$i;
			#print OUT $temp_data[$i],"=>",$i,"\n";
		}
		my $out_str=&writeHeadersToVCF;
		print OUT $out_str,$sample_name,"\n";
		next;
	}
	#print OUT Dumper %tsv_header_hash;
	#exit;
	if($header_flag==0){
		print OUT "ERROR\:Header absent in file. Please input the correct file and try again\n";
		exit;
	} else {
	## Continue with parsing the file for conversion to vcf
	#CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO	FORMAT	S12-043219
	#chr2	25459813	.	T	C	100.00	PASS	DP=2095;TI=NM_153759,NM_022552,NM_175629;GI=DNMT3A,DNMT3A,DNMT3A;FC=Missense_I635V,Missense_I824V,Missense_I824V;EXON	GT:GQ:AD:VF:NL:SB:GQX	0/1:100:2022,65:0.0310:20:-100.0000:100


	#Gene_0	Variant_1	Chr_2	Coordinate_3	Classification_22	Type_5	Genotype_6	Exonic_7	Filters_8	Quality_9	GQX_10	Inherited From_12	Alt Variant Freq_13	Read Depth_14	Alt Read Depth_15	Allelic Depths_16	Custom Annotation_17	Custom Gene Annotation_21	Num Transcripts_26	Transcript_27	Consequence_28	cDNA Position_29	CDS Position_30	Protein Position_31	Amino Acids_32	Codons_33	HGNC_75	Transcript HGNC_36	Canonical_38	Sift_39	PolyPhen_40	ENSP_41	HGVSc_42	HGVSp_43	dbSNP ID_44	Ancestral Allele_45	Allele Freq_46	Allele Freq Global Minor_47	Global Minor Allele_48	Allele Freq Amr_49	Allele Freq Asn_50	Allele Freq Af_51	Allele Freq Eur_52	Allele Freq Evs_53	EVS Coverage_54	EVS Samples_55	Conserved Sequence_56	COSMIC ID_57	COSMIC Wildtype_58	COSMIC Allele_59	COSMIC Gene_60	COSMIC Primary Site_61	COSMIC Histology_62	ClinVar Accession_69	ClinVar Ref_64	ClinVar Alleles_65	ClinVar Allele Type_66	ClinVar Significance_67	Alternate Alleles_11	Google Scholar_23	PubMed_24	UCSC Browser_25	ClinVar RS_63	ClinVar Disease Name_68	ClinVar MedGen_70	ClinVar OMIM_71	ClinVar Orphanet_72	ClinVar GeneReviews_73	ClinVar SnoMedCt ID_74	
	#DPYD	G>A/A	1	98348885		snv	hom	yes	PASS	100	100		99.76	1668	1664	4,1664			1	NM_000110.3	missense_variant	222	85	29	R/C	Cgt/Tgt	DPYD	DPYD	YES	tolerated(0.18)	possibly_damaging(0.457)	NP_000101.2	NM_000110.3:c.85C>T	NP_000101.2:p.Arg29Cys	rs1801265	G	77	23.08	G	77	94	55	78	0	127	6503	yes							RCV000000464.1	G	G:A	unknown:germline	pathogenic	2	google	pubmed	ucsc	rs1801265	Dihydropyrimidine_dehydrogenase_deficiency		274270				

	my @temp_data=split("\t",$tsv_line);
	# 00_CHROM and 01_POS
	print OUT "chr",$temp_data[$tsv_header_hash{"Chr_2"}],"\t",$temp_data[$tsv_header_hash{"Coordinate_3"}],"\t";
	# 02_ID		
		if($temp_data[$tsv_header_hash{"dbSNP ID_44"}]=~m/^\S+/){
			print OUT $temp_data[$tsv_header_hash{"dbSNP ID_44"}],"\t";
		} else {
			print OUT "\.\t";
		}
	
	# 03_REF and 04_ALT
	
	if($temp_data[$tsv_header_hash{"Variant_1"}]=~m/(\w+)\>(\w+)\/(\w+)/){
		print OUT $1,"\t",$3;
	} else {
		print OUT "ERROR\:There seems to be an error with the standard variant nomenclature. Please check and try again.\n";
		exit;
	}
	# 05_QUAL and 06_FILTER
	print OUT "\t",$temp_data[$tsv_header_hash{"Quality_9"}],"\t",$temp_data[$tsv_header_hash{"Filters_8"}],"\t";
	
	# 07_INFO
		#DP, TI, GI and FC		
		#if($temp_data[$tsv_header_hash{"Read Depth_14"}])
		print OUT "DP\=",$temp_data[$tsv_header_hash{"Read Depth_14"}],"\;TI\=",$temp_data[$tsv_header_hash{"Transcript_27"}],"\;GI\=",$temp_data[$tsv_header_hash{"Gene_0"}],"\;FC\=",$temp_data[$tsv_header_hash{"Consequence_28"}];
		
		# HGC and HGP
		print OUT "\;HGC\=",$temp_data[$tsv_header_hash{"HGVSc_42"}],"\;HGP\=",$temp_data[$tsv_header_hash{"HGVSp_43"}]; 
		
		# CID CWT CVA GMA GMAF
		if($temp_data[$tsv_header_hash{"COSMIC ID_57"}]=~m/\S+.*/){
			print OUT "\;CID\=",$temp_data[$tsv_header_hash{"COSMIC ID_57"}],"\;CWT\=",$temp_data[$tsv_header_hash{"COSMIC Wildtype_58"}],"\;CVA\=",$temp_data[$tsv_header_hash{"COSMIC Allele_59"}];
		}
		
		# GMA and GMAF	
		if($temp_data[$tsv_header_hash{"Global Minor Allele_48"}]=~m/\S+.*/){
			print OUT "\;GMA\=",$temp_data[$tsv_header_hash{"Global Minor Allele_48"}];
		}
		if($temp_data[$tsv_header_hash{"Allele Freq Global Minor_47"}]=~m/\S+.*/){
			print OUT "\;GMAF\=",$temp_data[$tsv_header_hash{"Allele Freq Global Minor_47"}];
		}
		
		
	# 08_FORMAT
	#print OUT "\tGT\:GQ\:AD\:VF\:NL\:SB\:GQX\t";
	print OUT "\tGT\:GQ\:AD\:VF\:GQX\t";
	
	#09_SampleINFO
	#0/1:100:2022,65:0.0310:20:-100.0000:100
	
	#GT
	if($temp_data[$tsv_header_hash{"Genotype_6"}] eq "het"){
		print OUT "0\/1";
	} elsif($temp_data[$tsv_header_hash{"Genotype_6"}] eq "hom"){
		print OUT "1\/1";
	} else{
		print OUT "ERROR\: Cannot recognize genotype\!\!";
		exit;
	}
	#GQ
	print OUT "\:",$temp_data[$tsv_header_hash{"Quality_9"}];
	#AD
	print OUT "\:",$temp_data[$tsv_header_hash{"Allelic Depths_16"}];
	#VF (This is: Alt Variant Freq_13/100)
	print OUT "\:",$temp_data[$tsv_header_hash{"Alt Variant Freq_13"}]/100;
#	#NL
#	print OUT "\:0";
#	#SB
#	print OUT "\:0";
	#GQX
	print OUT "\:",$temp_data[$tsv_header_hash{"GQX_10"}];
	print OUT "\n";
	}
}
close TS;
close OUT;

}


########### SUBROUTINES #############
sub writeHeadersToVCF {
	my $ret_string="\#\#fileformat\=VCFv4\.1\n";
	$ret_string.="\#\#FORMAT\=\<ID\=GQX\,Number\=1\,Type\=Integer\,Description\=\"Minimum of \{Genotype quality assuming variant position\,Genotype quality assuming non\-variant position\}\"\>\n";
	$ret_string.="\#\#FORMAT\=\<ID\=GT\,Number\=1\,Type\=String\,Description\=\"Genotype\"\>\n";
	$ret_string.="\#\#FORMAT\=\<ID\=GQ\,Number\=1\,Type\=Integer\,Description\=\"Genotype Quality\"\>\n";
	$ret_string.="\#\#FORMAT\=\<ID\=AD\,Number\=\.\,Type\=Integer\,Description\=\"Allele Depth\"\>\n";
	$ret_string.="\#\#FORMAT\=\<ID\=VF\,Number\=1\,Type\=Float\,Description\=\"Variant Frequency\"\>\n";
#	$ret_string.="\#\#FORMAT\=\<ID\=NL\,Number\=1\,Type\=Integer\,Description\=\"Applied BaseCall Noise Level\"\>\n";
#	$ret_string.="\#\#FORMAT\=\<ID\=SB\,Number\=1\,Type\=Float\,Description\=\"StrandBias Score\"\>\n";
	$ret_string.="\#\#INFO\=\<ID\=TI\,Number\=\.\,Type\=String\,Description\=\"Transcript ID\"\>\n";
	$ret_string.="\#\#INFO\=\<ID\=GI\,Number\=\.\,Type\=String\,Description\=\"Gene ID\"\>\n";
	$ret_string.="\#\#INFO\=\<ID\=EXON\,Number\=0\,Type\=Flag\,Description\=\"Exon Region\"\>\n";
	$ret_string.="\#\#INFO\=\<ID\=FC\,Number\=\.\,Type\=String\,Description\=\"Functional Consequence\"\>\n";
	$ret_string.="\#\#INFO\=\<ID\=DP\,Number\=1\,Type\=Integer\,Description\=\"Total Depth\"\>\n";
	$ret_string.="\#\#INFO\=\<ID\=HGC\,Number\=1\,Type\=String\,Description\=\"HGVS c.\"\>\n";
	$ret_string.="\#\#INFO\=\<ID\=HGP\,Number\=1\,Type\=String\,Description\=\"HGVS p.\"\>\n";
	$ret_string.="\#\#INFO\=\<ID\=CID\,Number\=1\,Type\=String\,Description\=\"Cosmic ID\"\>\n";
	$ret_string.="\#\#INFO\=\<ID\=CWT\,Number\=1\,Type\=String\,Description\=\"Cosmic WT allele\"\>\n";
	$ret_string.="\#\#INFO\=\<ID\=CVA\,Number\=1\,Type\=String\,Description\=\"Cosmic Variant Allele\"\>\n";
	$ret_string.="\#\#INFO\=\<ID\=GMA\,Number\=1\,Type\=String\,Description\=\"Global Minor Allele\"\>\n";
	$ret_string.="\#\#INFO\=\<ID\=GMAF\,Number\=1\,Type\=String\,Description\=\"Global Minor Allele Frequency in percentage\"\>\n";
	
	
	$ret_string.="\#\#FILTER\=\<ID\=LowVariantFreq\,Description\=\"Low variant frequency \< 0\.01\"\>\n";
	$ret_string.="\#\#FILTER\=\<ID\=LowGQ\,Description\=\"GQ below \< 30\.00\"\>\n";
	$ret_string.="\#\#FILTER\=\<ID\=R8\,Description\=\"IndelRepeatLength is greater than 8\"\>\n";
	$ret_string.="\#\#FILTER\=\<ID\=sb\,Description\=\"Variant strand bias too high\"\>\n";
#	$ret_string.="\#\#fileDate\=20140126\n";
	$ret_string.="\#\#source\=CallSomaticVariantsv2\.1\.12\.0\n";
	$ret_string.="\#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\tFORMAT\t";
	return $ret_string;
}
